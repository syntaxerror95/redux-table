{"ast":null,"code":"var _jsxFileName = \"/Users/sahadevtandur/React/redux-table/src/component/modal/body.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeModal, addRow } from \"../../redux\";\nimport useId from \"../../hook/useId\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Body() {\n  _s();\n  const table = useSelector(state => state.table);\n  const [currentId, getUniqueId] = useId(table);\n  const fnameInputRef = useRef();\n  const dispatch = useDispatch();\n  const [fnameInp, setFNameInp] = useState(\"\");\n  const [lnameInp, setLNameInp] = useState(\"\");\n  useEffect(() => {\n    fnameInputRef && fnameInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"First Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fnameInputRef,\n          type: \"text\",\n          value: fnameInp,\n          onChange: e => setFNameInp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Last Name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: lnameInp,\n          onChange: e => setLNameInp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatch(addRow({\n          id: getUniqueId,\n          fname: fnameInp,\n          lnameInp: lnameInp\n        })),\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(closeModal()),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Body, \"PJjJefd+XymPPO5/9XoUzwYWsKI=\", false, function () {\n  return [useSelector, useId, useDispatch];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","useEffect","useRef","useDispatch","useSelector","closeModal","addRow","useId","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","table","state","currentId","getUniqueId","fnameInputRef","dispatch","fnameInp","setFNameInp","lnameInp","setLNameInp","current","focus","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onClick","id","fname","_c","$RefreshReg$"],"sources":["/Users/sahadevtandur/React/redux-table/src/component/modal/body.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeModal, addRow } from \"../../redux\";\nimport useId from \"../../hook/useId\";\n\nfunction Body() {\n    const table = useSelector(state => state.table)\n    const [currentId, getUniqueId] = useId(table);\n  const fnameInputRef = useRef();\n  const dispatch = useDispatch();\n\n  const [fnameInp, setFNameInp] = useState(\"\");\n  const [lnameInp, setLNameInp] = useState(\"\");\n\n  useEffect(() => {\n    fnameInputRef && fnameInputRef.current.focus();\n  }, []);\n\n  return (\n    <>\n      <div className=\"modal-body\">\n        <div className=\"modal-body-row\">\n          <span>First Name : </span>\n          <input\n            ref={fnameInputRef}\n            type=\"text\"\n            value={fnameInp}\n            onChange={(e) => setFNameInp(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"modal-body-row\">\n          <span>Last Name :</span>\n          <input\n            type=\"text\"\n            value={lnameInp}\n            onChange={(e) => setLNameInp(e.target.value)}\n          ></input>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <button\n          type=\"submit\"\n          onClick={() =>\n            dispatch(addRow({ id : getUniqueId, fname: fnameInp, lnameInp: lnameInp }))\n          }\n        >\n          OK\n        </button>\n        <button type=\"button\" onClick={() => dispatch(closeModal())}>\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}