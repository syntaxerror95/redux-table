{"ast":null,"code":"import { ADD_ROW } from \"./constants\";\n// const initialState = [\n//     { id: 1, name: \"Sahadev\", age: 28 },\n//   { id: 2, name: \"Tandur\", age: 27 }\n// ];\n\nconst initialState = {\n  counter: {\n    count: 10\n  }\n};\nconst tableReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_ROW:\n      return state.push(action.payload);\n    case \"increment\":\n      return {\n        ...state,\n        count: state.count + action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default tableReducer;","map":{"version":3,"names":["ADD_ROW","initialState","counter","count","tableReducer","state","arguments","length","undefined","action","type","push","payload"],"sources":["/Users/sahadevtandur/React/redux-table/src/redux/table/tableReducer.js"],"sourcesContent":["import { ADD_ROW } from \"./constants\";\n// const initialState = [\n//     { id: 1, name: \"Sahadev\", age: 28 },\n//   { id: 2, name: \"Tandur\", age: 27 }\n// ];\n\nconst initialState = {\n  counter: {\n    count: 10,\n  },\n};\nconst tableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ROW:\n      return state.push(action.payload);\n    case \"increment\":\n      return {\n        ...state,\n        count: state.count + action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tableReducer;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;IACPC,KAAK,EAAE;EACT;AACF,CAAC;AACD,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV,OAAOK,KAAK,CAACM,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACnC,KAAK,WAAW;MACd,OAAO;QACL,GAAGP,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGM,MAAM,CAACG;MAC9B,CAAC;IACH;MACE,OAAOP,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}